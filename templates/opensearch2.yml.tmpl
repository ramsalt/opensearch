cluster:
  name: {{ getenv "OS_CLUSTER_NAME" "opensearch-default" }}

{{/* ****************************************************************** */}}
{{/*                    .    hot-warm setup                             */}}
{{/* ****************************************************************** */}}

{{ if (getenv "OS_STORAGE_TEMP") }}
node.attr.temp: {{ getenv "OS_STORAGE_TEMP" }}

transport:
  host: {{ getenv "OS_TRANSPORT_HOST" "0.0.0.0" }}

{{/* --------------------------------- */}}
{{/* hot node gets configured normally */}}
{{/* --------------------------------- */}}
{{ if (eq (getenv "OS_STORAGE_TEMP") "hot") }}
node:
  master: {{ getenv "OS_NODE_MASTER" "true" }}
  name: {{ getenv "OS_NODE_NAME" "opensearch" }}
  data: {{ getenv "OS_NODE_DATA" "true" }}
  ingest: {{ getenv "OS_NODE_INGEST" "true" }}
  max_local_storage_nodes: {{ getenv "OS_NODE_MAX_LOCAL_STORAGE_NODES" "1" }}

cluster.initial_cluster_manager_nodes: ["{{ getenv "OS_NODE_NAME" "opensearch" }}"]

{{/* --------------------------------- */}}
{{/* non-hot node is a data-only node */}}
{{/* --------------------------------- */}}
{{ else }}
node:
  master: false
  name: {{ getenv "OS_NODE_NAME" "opensearch-warm-storage" }}
  data: true
  ingest: false
  max_local_storage_nodes: {{ getenv "OS_NODE_MAX_LOCAL_STORAGE_NODES" "1" }}

discovery:
  seed_hosts: ["{{ getenv "OS_MANAGER_NODE" "opensearch" }}"]

cluster.initial_cluster_manager_nodes: ["{{ getenv "OS_MANAGER_NODE" "opensearch" }}"]

{{ end }}

{{/* ****************************************************************** */}}
{{/*                         single-node setup                          */}}
{{/* ****************************************************************** */}}

{{/* ----------------------------------- */}}
{{/* if we do not have a hot-warm setup, */}}
{{/* we configure everything as usual    */}}
{{/* ----------------------------------- */}}
{{ else }}
node:
  master: {{ getenv "OS_NODE_MASTER" "true" }}
  name: {{ getenv "OS_NODE_NAME" "true" }}
  data: {{ getenv "OS_NODE_DATA" "true" }}
  ingest: {{ getenv "OS_NODE_INGEST" "true" }}
  max_local_storage_nodes: {{ getenv "OS_NODE_MAX_LOCAL_STORAGE_NODES" "1" }}

transport:
  host: {{ getenv "OS_TRANSPORT_HOST" "localhost" }}

{{ end }}

{{/* ****************************************************************** */}}

network.host: {{ getenv "OS_NETWORK_HOST" "0.0.0.0" }}

bootstrap:
  memory_lock: {{ getenv "OS_BOOTSTRAP_MEMORY_LOCK" "true" }}

http:
  compression: {{ getenv "OS_HTTP_COMPRESSION" "true" }}
  cors:
    enabled: {{ getenv "OS_HTTP_CORS_ENABLED" "true" }}
    allow-origin: "{{ getenv "OS_HTTP_CORS_ALLOW_ORIGIN" "*" }}"

{{ if (getenv "OS_SHARD_ALLOCATION_AWARENESS_ATTR") }}
{{ if (getenv "OS_SHARD_ATTR") }}
node.attr.{{ getenv "OS_SHARD_ALLOCATION_AWARENESS_ATTR" }}: {{ getenv "OS_SHARD_ATTR" }}
{{ end }}

{{ $node_master := (getenv "OS_NODE_MASTER" "true") }}
{{ if (eq $node_master "true") }}
cluster.routing.allocation.awareness.attributes: {{ getenv "OS_SHARD_ALLOCATION_AWARENESS_ATTR" }}
{{ end }}
{{ end }}

{{- if getenv "OS_REINDEX_REMOTE_WHITELIST" }}
reindex.remote.whitelist: {{ getenv "OS_REINDEX_REMOTE_WHITELIST" }}
{{- end }}

plugins.security.restapi.roles_enabled: [ "all_access" ]

plugins.security.ssl.transport.pemcert_filepath: node1.pem
plugins.security.ssl.transport.pemkey_filepath: node1-key.pem
plugins.security.ssl.transport.pemtrustedcas_filepath: root-ca.pem
plugins.security.ssl.transport.enforce_hostname_verification: false
plugins.security.ssl.http.pemcert_filepath: node1.pem
plugins.security.ssl.http.pemkey_filepath: node1-key.pem
plugins.security.ssl.http.pemtrustedcas_filepath: root-ca.pem
plugins.security.ssl.http.enabled: true

plugins.security.authcz.admin_dn:
  - 'CN=A,OU=UNIT,O=ORG,L=Tromso,ST=Troms og Finnmark,C=NO'
plugins.security.nodes_dn:
  - 'CN=node1.dns.a-record,OU=UNIT,O=ORG,L=Tromso,ST=Troms og Finnmark,C=NO'
plugins.security.allow_default_init_securityindex: true

plugins.query.datasources.encryption.masterkey: "{{ getenv "MASTERKEY" "MASTERKEY" }}"

path.repo: ["/snapshots"]
